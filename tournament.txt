team 1 vs. team 0
100 vs. -500
backstabber vs. loyal
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 2 vs. team 0
0 vs. 0
loyal vengeful vs. loyal
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 2 vs. team 1
-375 vs. -75
loyal vengeful vs. backstabber
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 3 vs. team 0
0 vs. -4
ideal team name vs. loyal
cb  ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 3 vs. team 1
-255 vs. -244
ideal team name vs. backstabber
ccbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 3 vs. team 2
0 vs. -3
ideal team name vs. loyal vengeful
cb   ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccbccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 4 vs. team 0
99 vs. -496
Sean and Caroline vs. loyal
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 4 vs. team 1
-253 vs. -248
Sean and Caroline vs. backstabber
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 4 vs. team 2
-75 vs. -373
Sean and Caroline vs. loyal vengeful
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
ccbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb

team 4 vs. team 3
-249 vs. -249
Sean and Caroline vs. ideal team name
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 5 vs. team 0
0 vs. 0
TheLionNamedMustafa vs. loyal
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 5 vs. team 1
-254 vs. -246
TheLionNamedMustafa vs. backstabber
cbcbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 5 vs. team 2
0 vs. 0
TheLionNamedMustafa vs. loyal vengeful
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 5 vs. team 3
-3 vs. 0
TheLionNamedMustafa vs. ideal team name
ccbcc c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c
cb   c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 

team 5 vs. team 4
-252 vs. -244
TheLionNamedMustafa vs. Sean and Caroline
ccbcbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 6 vs. team 0
88 vs. -442
Squaddddddd vs. loyal
cccccccbcbbbcbbbbbbbcbcbbbbbbcbccbbbccbbccbbcc bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 6 vs. team 1
-284 vs. -200
Squaddddddd vs. backstabber
cbccbbcbbcbbccbbccbbcbbbcbccccbbcccbbcbbcccbbc bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 6 vs. team 2
-80 vs. -295
Squaddddddd vs. loyal vengeful
ccbbcbcbcbccbbcbccccbbcbbcbccbbcccbccbccbbbcbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cccbccbcbcbccbccbccccbccbccbccbccccbccbccbcbcbccbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc

team 6 vs. team 3
-226 vs. -226
Squaddddddd vs. ideal team name
bbccbbcccbbbbcccbbbbcbbbcccccbcccbcbbccbbcbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
ccb   bcbcbbbbcccbbbbcbbbcccccbcccbcbbccbbcbbbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 6 vs. team 4
-294 vs. -184
Squaddddddd vs. Sean and Caroline
bbccbbcbcbccbccccbcccbcccbbccccbcbbbbbcbccbbcc bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 6 vs. team 5
-205 vs. -221
Squaddddddd vs. TheLionNamedMustafa
bbcbcbccbccbbbbcbcbbbccbbcbbbccccccbbbccbbccbb bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cbccbcbccbccbbbbcbcbbbccbbcbbbccccccbbbccbbccbbcbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 7 vs. team 0
48 vs. -245
nick cage is our lord and savior vs. loyal
bccbcbccbccccccccbbcbcccbbcbbcccccbcbbbbbbbccbbbccbbbbcccccbcbbcbcbcbbcbbbbccbcbcbccbccbccbbcbbbccbbcbccbcbccbbcbccbbbccbbbcccbcb
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 7 vs. team 1
-250 vs. -250
nick cage is our lord and savior vs. backstabber
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 7 vs. team 2
-97 vs. -188
nick cage is our lord and savior vs. loyal vengeful
bcbbcbbbccbccbbbbccccbbcbccbccbcbcbcbbcccbbccbbcccccbcccccbcbccbbccbbbcccbbbbcbbbbbbbcbcccbcbccbccbcbbccbbbbcbcbccccbccbcbcbb
cbcbccbcbccbccbcbcccccbccbccbccbcbcbcbccccbcccbccccccbcccccbcbccbcccbcbcccbcbccbcbcbcbcbcccbcbccbccbcbcccbcbccbcbccccbccbcbcb

team 7 vs. team 3
-207 vs. -213
nick cage is our lord and savior vs. ideal team name
bbbcbccbbcbbcbcbbbcbbcbcbccbbbbcbcbbbcbbbcbbcbbcbbbcbcbcbbbcbcbcbcbbcbbbbcbbbcbbbbcbbcbcbbcbbbbcbcbbcbbcbcbcbbcb
ccbb   cbbcbbcbcbbbcbbcbcbcbbbbbcbcbbbcbbbcbbcbbcbbbcbcbcbbbcbcbcbcbbcbbbbcbbbcbbbbcbbcbcbbcbbbbcbcbbcbbcbcbcbbc

team 7 vs. team 4
-250 vs. -250
nick cage is our lord and savior vs. Sean and Caroline
bbcbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 7 vs. team 5
-170 vs. -178
nick cage is our lord and savior vs. TheLionNamedMustafa
bcbcbbbbbccbcbcbccccbbbcbbbbbbbbbbcbbccccbcbcbbcbccbbcbbccbbccccccbcbccccbcbbcbbbcbbccbcbbcccbcbccbcccbbccbcbbccbbccbcbbbcbbcbbbbbcbcbcccbbbcb
cbcbcbcbbbccbcbcbccccbbbcbbbbbbbbbbcbbccccbcbcbbcbccbbcbbccbbccccccbcbccccbcbbcbbbcbbccbcbbcccbcbccbcccbbccbcbbccbbccbcbbbcbbcbbbbbcbcbcccbbbc

team 7 vs. team 6
-226 vs. -226
nick cage is our lord and savior vs. Squaddddddd
bbcbbbbbcccbbbccbbbbbbcbbcbcbbbbcbcbbbccccbbcccbbbbccbbbbccbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bcbbbbccbcccbbbbbbbbcbbcccbbbbbccccbccbbccbccc bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 8 vs. team 0
0 vs. 0
loyal vengeful with permanent second impression vs. loyal
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 8 vs. team 1
-253 vs. -247
loyal vengeful with permanent second impression vs. backstabber
cbcbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 8 vs. team 2
0 vs. 0
loyal vengeful with permanent second impression vs. loyal vengeful
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 8 vs. team 3
-5 vs. 0
loyal vengeful with permanent second impression vs. ideal team name
ccbcc c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c
cb   c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 

team 8 vs. team 4
-252 vs. -244
loyal vengeful with permanent second impression vs. Sean and Caroline
ccbcbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 8 vs. team 5
0 vs. 0
loyal vengeful with permanent second impression vs. TheLionNamedMustafa
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 8 vs. team 6
-215 vs. -206
loyal vengeful with permanent second impression vs. Squaddddddd
cbccccbccbcbcbccbbcbcbcbccbccbbbcbccbbccccccbcccbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bccccbccbbbcbccbbcbcbcbccbccbbbcbccbbccccccbcc bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 8 vs. team 7
-171 vs. -164
loyal vengeful with permanent second impression vs. nick cage is our lord and savior
cbcbcbccbcccbbcbccbbbcbbbccccbbcccbbbcbbcccbcbbcbbccbcbbcbbbbbbcbcbccbccbcbbcccbbbcccbbcbcccbccbcbcbbbccbbbbccbbbcbbcbcccbcbbbccccbccccbccbcbcccbccbbcbcbcbbbbccbbbbcc
bcbcbbcbcccbbcbccbbbcbbbccccbbcccbbbcbbcccbcbbcbbccbcbbcbbbbbbcbcbccbccbcbbcccbbbcccbbcbcccbccbcbcbbbccbbbbccbbbcbbcbcccbcbbbccccbccccbccbcbcccbccbbcbcbcbbbbccbbbbccb

team 9 vs. team 0
98 vs. -494
Spellbat vs. loyal
ccbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

team 9 vs. team 1
-9 vs. 1
Spellbat vs. backstabber
cc                                                                                                                 
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 9 vs. team 2
-9 vs. -207
Spellbat vs. loyal vengeful
ccbbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb   bbb  
cccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbcccbcbc

team 9 vs. team 3
-5 vs. 0
Spellbat vs. ideal team name
cc                                                                                                                       
cb                                                                                                                       

team 9 vs. team 4
-3 vs. 0
Spellbat vs. Sean and Caroline
cc                                                                                                                                                                              
cbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 9 vs. team 5
-1 vs. -7
Spellbat vs. TheLionNamedMustafa
ccbbb   b                                                                                                                                                                                 
cccbcbcc c c                                                                                                                                                                              

team 9 vs. team 6
-4 vs. -12
Spellbat vs. Squaddddddd
ccbbb                           bb            b                                                                                                          
ccbbcbbbbbbbbbbbbbcbbbbbcbbbcbccbcbbcbcbbbcbcc bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 9 vs. team 7
-247 vs. -247
Spellbat vs. nick cage is our lord and savior
cc bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bcccbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

team 9 vs. team 8
-1 vs. -9
Spellbat vs. loyal vengeful with permanent second impression
ccbbb   b                                                                                                                                           
cccbcbcc c c                                                                                                                                        




	Each column shows score earned per round against each other player.


	P0	P1	P2	P3	P4	P5	P6	P7	P8	P9	
P0	0	100	0	0	99	0	88	48	0	98	
P1	-500	0	-375	-255	-253	-254	-284	-250	-253	-9	
P2	0	-75	0	0	-75	0	-80	-97	0	-9	
P3	-4	-244	-3	0	-249	-3	-226	-207	-5	-5	
P4	-496	-248	-373	-249	0	-252	-294	-250	-252	-3	
P5	0	-246	0	0	-244	0	-205	-170	0	-1	
P6	-442	-200	-295	-226	-184	-221	0	-226	-215	-4	
P7	-245	-250	-188	-213	-250	-178	-226	0	-171	-247	
P8	0	-247	0	0	-244	0	-206	-164	0	-1	
P9	-494	1	-207	0	0	-7	-12	-247	-9	0	
Total:	-2178	-1404	-1438	-937	-1394	-912	-1440	-1558	-902	-176	


 Average per round, with team strategy names:

player 0: -218 points: loyal
player 1: -141 points: backstabber
player 2: -144 points: loyal vengeful
player 3: -94 points: ideal team name
player 4: -140 points: Sean and Caroline
player 5: -92 points: TheLionNamedMustafa
player 6: -144 points: Squaddddddd
player 7: -156 points: nick cage is our lord and savior
player 8: -91 points: loyal vengeful with permanent second impression
player 9: -18 points: Spellbat


-------------------------------------------------------------------------------
Here is the code that produced this data:

from __future__ import print_function

''' 
PrisonerDilemma.py allows hard-coding different strategies
for the Iterative Prisoners Dilemma, the canonical game of game-theory.
Each strategy plays 100 to 200 rounds against each other strategy.
The results of all previous rounds within a 100-200 round stretch are known
to both players. 
play_tournament() executes the tournament and stores output in tournament.txt
Players should each code their strategies in their assigned section of code.
Aggregated results are stored in tournament.txt
Unpublished work (c)2013 Project Lead The Way
CSE Project 1.3.5 Collaborating on a Project
Draft, Do Not Distribute
Version 2/25/2016 
'''

import random
def play_round(player1, player2, history1, history2, score1, score2):
    '''
    Calls the get_action() function which will get the characters
    'c' or 'b' for collude or betray for each player.
    The history is provided in a string, e.g. 'ccb' indicates the player
    colluded in the first two rounds and betrayed in the most recent round.
    Returns a 4-tuple with updated histories and scores
    (history1, history2, score1, score2)
    '''
    
    RELEASE = 0 # (R) when both players collude
    TREAT = 100 # (T) when you betray your partner
    SEVERE_PUNISHMENT = -500 # (S) when your partner betrays you
    PUNISHMENT = -250 # (P) when both players betray each other
    # Keep T > R > P > S to be a Prisoner's Dilemma
    # Keep 2R > T + S to be an Iterative Prisoner's Dilemma
    
    #Get the two players' actions and remember them.
    action1 = get_action(player1, history1, history2, score1, score2)
    action2 = get_action(player2, history2, history1, score2, score1)
    if type(action1) != str:
        action1=' '
    if type(action2) != str:
        action2=' '
    #Append the actions to the previous histories, to return
    new_history1 = history1 + action1
    new_history2 = history2 + action2
    
    #Change scores based upon player actions
    if action1 not in ('c','b') or action2 not in ('c','b'):
    # Do nothing if someone's code returns an improper action
        new_score1 = score1
        new_score2 = score2
        
    else: 
    #Both players' code provided proper actions
        if action1 == 'c':
            if action2 == 'c':
                # both players collude; get reward
                new_score1 = score1 + RELEASE
                new_score2 = score2 + RELEASE
            else:
                # players 1,2 collude, betray; get sucker, tempation
                new_score1 = score1 + SEVERE_PUNISHMENT
                new_score2 = score2 + TREAT
        else:
            if action2 == 'c':
                # players 1,2 betray, collude; get tempation, sucker
                new_score1 = score1 + TREAT
                new_score2 = score2 + SEVERE_PUNISHMENT                       
            else:
                # both players betray; get punishment   
                new_score1 = score1 + PUNISHMENT
                new_score2 = score2 + PUNISHMENT
                    
    #send back the updated histories and scores
    return (new_history1, new_history2, new_score1, new_score2)
   
def play_iterative_rounds(player1, player2):
    '''
    Plays a random number of rounds (between 100 and 200 rounds) 
    of the iterative prisoners' dilemma between two strategies.
    identified in the parameters as integers.
    Returns 4-tuple, for example ('cc', 'bb', -200, 600) 
    but with much longer strings 
    '''
    number_of_rounds = random.randint(100,200)
    moves1 = ''
    moves2 = ''
    score1 = 0
    score2 = 0
    for round in range(number_of_rounds):
        moves1, moves2, score1, score2 = \
            play_round(player1, player2, moves1, moves2, score1, score2)
    return (moves1, moves2, score1, score2)

def get_action(player, history, opponent_history, score, opponent_score, getting_team_name=False):
    '''Gets the strategy for the player, given their own history and that of
    their opponent, as well as the current scores within this pairing.
    The parameters history and opponenet history are strings with one letter
    per round that has been played so far: either an 'c' for collude or a 'b' for 
    betray. The function should return one character, 'c' or 'b'. 
    The history strings have the first round between these two players 
    as the first character and the most recent round as the last character.'''
      
    ######
    ######
    #
    # This example player always colludes
    if player == 0:
        if getting_team_name:
            return 'loyal'
        else:
            return 'c'

    
        
            
                
                    
                            
    ######
    ######
    #
    #This example player always betrays.      
    elif player == 1:
        if getting_team_name:
            return 'backstabber'
        else:
            return 'b'








    ######
    ######
    #   
    #This example player is silent at first and then 
    #only betrays if they were a sucker last round.
    elif player == 2:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray if they were severely punished last time
            else:
                return 'c' #otherwise collude


    
    
    
    
    # EACH STUDENT TEAM CAN CHANGE ONE OF THESE elif SEGMENTS OF CODE.










    ######
    ######
    #
    elif player == 3:
        if getting_team_name:
            randomchoice = ['b', 'c']
            return 'ideal team name'
        else:
            if len(opponent_history)==0: 
                return 'c'
            else:
                recent_round_opponent = opponent_history[-1]
                recent_round_me = history[-1]
                for round in range(len(history)-1):
                    prior_round_opponent = opponent_history[round]
                    prior_round_me = history[round]
                    if (prior_round_me == recent_round_me) and \
                            (prior_round_opponent == recent_round_opponent):
                        return opponent_history[round]
                if history[-1]=='b' and opponent_history[-1]=='b':
                    return 'b' 
                if history[-1]=='c' and opponent_history[-1]=='c':
                    return 'b' 
                if history[-1]=='c' and opponent_history[-1]=='b':
                    return 'c' 
                else:
                    'b' or 'c'
                 



    ######
    ######
    #
    elif player == 4:
        if getting_team_name:
            return 'Sean and Caroline' 
        else:
            
            if len(opponent_history) == 0:
                return 'c'
            else:
                return'b'
                        # use history, opponent_history, score, opponent_score
                        # to compute your strategy
                size = len(history)
                if (size%3 == 0):  
            #the number of rounds played is a multiple of 3
                    return 'b'
                else:
                    return 'c'
                if len(opponent_history):
                    return 'b'






    ######
    ######        
    #
    elif player == 5:
        if getting_team_name:
            return 'TheLionNamedMustafa'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy      
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            else:
                # if there was a previous round just like the last one,
                # do whatever they did in the round that followed it
                recent_round_opponent = opponent_history[-1]
                recent_round_me = history[-1]
                            
                #go through rounds before that one
                for round in range(len(history)-1):
                    prior_round_opponent = opponent_history[round]
                    prior_round_me = history[round]
                    #if one matches
                    if (prior_round_me == recent_round_me) and \
                            (prior_round_opponent == recent_round_opponent):
                        return opponent_history[round]
                # no match found
                if history[-1]=='c' and opponent_history[-1]=='b':
                    return 'b' # betray is they were severely punished last time
                else:
                    return 'c' #otherwise collude
                if opponent_history[0:7]=='winning': # Check to if partner/self are matched
                    return 'c' 
                elif opponent_history[0:7] == 'bbbbbbb': # Checks if opponent is only betraying
                    return 5
                else:
                    streak_break = random.randint(1,50) 
                    if streak_break == [25]: 
                        return 'c' # This will randomly throw a 'c' to break a streak
                    else:
                        return 'b'
                if history[-1]=='c' and opponent_history[-1]=='b':
                    return 'b' 
                else:
                    # if there was a previous round just like the last one,
                    # do whatever they did in the round that followed it
                    recent_round_opponent = opponent_history[-1]
                    recent_round_me = history[-1]
                if opponent_history[-1]=='b':
                    return 'b'
                elif history[-1]=='b' and opponent_history[-1]=='b':
                    return 'b'
    
    
    
    





    ######
    ######        
    #
    elif player == 6: 
        randomchoice = ['c', 'b']
        if getting_team_name:
            return 'Squaddddddd'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy
            if len(opponent_history) <= 45: 
                return random.choice(randomchoice)
            if len(opponent_history) > 46:
                return 'b' 
            if len(opponent_history) >= 80 and len(opponent_history) < 100:
                return random.choice(randomchoice)
            if len(opponent_history) >= 100 < 150:
                return 'b'  
           










    ######
    ######       
    #
    elif player == 7:
        if getting_team_name:
            return 'nick cage is our lord and savior'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy
            
            if len(opponent_history)==0: #It's the first round: betray
                return 'b'
            elif score > opponent_score:
                if random.randint(0,1) == 0:
                    return'b'
                else:
                    return 'c'
            else:
                return 'b' #otherwise betray











    ######
    ######        
    #
    elif player == 8:
        if getting_team_name:
            #if there was a previous round just like 
            return 'loyal vengeful with permanent second impression'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy      
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            else:
                # if there was a previous round just like the last one,
                # do whatever they did in the round that followed it
                recent_round_opponent = opponent_history[-1]
                recent_round_me = history[-1]
                            
                #go through rounds before that one
                for round in range(len(history)-1):
                    prior_round_opponent = opponent_history[round]
                    prior_round_me = history[round]
                    #if one matches
                    if (prior_round_me == recent_round_me) and \
                            (prior_round_opponent == recent_round_opponent):
                        return opponent_history[round]
                # no match found
                if history[-1]=='c' and opponent_history[-1]=='b':
                    return 'b' # betray is they were severely punished last time
                else:
                    return 'c' #otherwise collude












    ######
    ######
    #
    elif player == 9:
        if getting_team_name:
            return 'Spellbat'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='b' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            elif len(opponent_history) >= 2:
                if opponent_history[-2] == 'c' and opponent_history[-1] == 'c':
                    return 'b'
            else:
                return 'c' #otherwise collude










    # TEAM TEN WOOOOO 
    elif player == 10:
        if getting_team_name:
            return 'Ides of March'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy      
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            else:
                # AVERAGE choice of the opponent and us, colluding or betraying
                opponent_average = opponent_history.count('c')/len(opponent_history)
                if opponent_average >= 0.5:  # has a history of colluding
                    return 'c'  
                else: # has a history of betraying
                    return 'b'









    ######
    ######
    #
    elif player == 11:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude










    ######
    ######
    #
    elif player == 12:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            # use history, opponent_history, score, opponent_score
            # to compute your strategy
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude
    
    


    ######
    ######
    #
    elif player == 13:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude
    
    







    ######
    ######
    #
    elif player == 14:
        if getting_team_name:
            return 'loyal vengeful occasionally greedy'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                if random.random()<0.1: #10% of the other rounds
                    return 'b'         #betray
                else:
                    return 'c'         #otherwise collude
    
    
    
    



    ######
    ######
    #
    elif player == 15:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude
    
    







    ######
    ######
    #
    elif player == 16:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude
    
    







    ######
    ######
    #
    elif player == 17:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude
    
    







    ######
    ######
    #
    elif player == 18:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude
    
    







    ######
    ######
    #
    elif player == 19:
        if getting_team_name:
            return 'loyal vengeful'
        else:
            if len(opponent_history)==0: #It's the first round: collude
                return 'c'
            elif history[-1]=='c' and opponent_history[-1]=='b':
                return 'b' # betray is they were severely punished last time
            else:
                return 'c' #otherwise collude
    
    







def play_tournament(num_players):
    #create a list of zeros, one per player
    scores = []
    for i in range(num_players):
        scores += [0]
    
    
    ''' Get the team name from each team algorithm'''
    #create a list of the right length
    team_names = range(num_players)
    for player in range(num_players):
        team_names[player] = get_action(player,'','',0,0,getting_team_name=True)
             
    # each element will become a column for each player
    # range is just to get list of correct size
    result_table=range(num_players)     
    moves_table=range(num_players) 
    
    
    for player1 in range(num_players):  
        # create the column for each player
        # range just to get list of correct size
        result_table[player1]=range(num_players) 
        result_table[player1][player1]=0 # initialize unused diagonal to 0
        moves_table[player1]=range(num_players)
        # play a game between with every other player of lower number
        for player2 in range(player1):
            moves1, moves2, score1, score2 = \
                play_iterative_rounds(player1, player2)
            
            rounds = len(moves1)
            score1_per_round = score1/rounds 
            score2_per_round = score2/rounds
            
            result_table[player1][player2]=score1_per_round
            result_table[player2][player1]=score2_per_round
            
            moves_table[player1][player2] = moves1
            moves_table[player2][player1] = moves2
            
            #accumulate the results for the two players
            scores[player1] += score1*1.0/len(moves1)#ends up same as column sum
            scores[player2] += score2*1.0/len(moves2)#ends up same as column sum
     
    '''report round-level results in a data file'''
    use_datafile=True
    if use_datafile:
        # use the same directory as the python script
        import os.path              
        directory = os.path.dirname(os.path.abspath(__file__))  
        
        #name the file tournament.txt
        filename = os.path.join(directory, 'tournament.txt')
        #create the file for the round-by-round results
        results = open(filename,'w')
        for player1 in range(num_players):
            for player2 in range(player1):
                # store the results in the file
                #title by team numbers
                results.write('team ' + str(player1) + 
                              ' vs. ' + 'team ' + str(player2) +'\n')
                #title by player-on-player average score
                results.write(str(result_table[player1][player2]) + 
                              ' vs. ' + str(result_table[player2][player1])+'\n')
                #title by team names
                results.write(team_names[player1] + 
                             ' vs. ' + team_names[player2] + '\n')
                #show the moves, aligned vertically
                results.write(moves_table[player1][player2] +'\n')
                results.write(moves_table[player2][player1] +'\n')
                #blank line between each pair's results
                results.write('\n')
            
        #at the bottom repeat the output that was sent to the screen
        #print a title for the table
        results.write('\n\n\n\tEach column shows score earned per round against each other player.\n\n\n')
        #print header line
        results.write('\t') #skip 1st column
        for player1 in range(num_players):
            results.write('P'+str(player1)+'\t') # label each additional column
        results.write('\n')
        
        #print each player's scores
        for player2 in range(num_players):
            results.write('P'+str(player2)+'\t') #label the player's row
            for player1 in range(num_players):
                #print score against each other player
                results.write(str(result_table[player1][player2])+'\t') 
            results.write('\n')
        results.write('Total:\t')
        for player1 in range(num_players):
            results.write(str(int(scores[player1]))+'\t')
        results.write('\n\n\n Average per round, with team strategy names:\n\n')       
    
        #print team ids, total scores, and names
        for player in range(num_players):
            results.write('player ' + str(player) + ': ' + \
                    str(int(scores[player])/num_players) + ' points: '+\
                    team_names[player]+'\n')
                    
                    
        #append the file showing algorithms
        results.write('\n\n' + '-'*79 + '\n' + \
                    'Here is the code that produced this data:\n\n')
        this_code_file = open(__file__, 'r')
        for line in this_code_file:
            results.write(line)
                
    '''report the results on screen'''        
    #print a title for the table
    print('\n\n\tEach column shows score earned per round against each other player.\n\n')
    
    #print header line
    print('\t', end='') #skip 1st column
    for player1 in range(num_players):
        print('P',player1, end='\t') # label each additional column
    print()
    
    #print each player's scores
    for player2 in range(num_players):
        print('P',player2, end='\t') #label the player's row
        for player1 in range(num_players):
            #print score against each other player
            print(result_table[player1][player2], end='\t') 
        print()
    #print row of total scores
    print('Total:\t',end='')
    for player1 in range(num_players):
        print(str(int(scores[player1])),end='\t')

    print('\n\n\n Average per round, with team strategy names:\n\n')
    #print team ids, total scores, and names
    for player in range(num_players):
        print('player ' + str(player) , ': ' , 
               str(int(scores[player])/num_players) , ' points: ',
               team_names[player])
    